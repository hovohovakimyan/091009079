1.1 Git-ն օգտագործվում է սկզբնական կոդի փոփոխություններին հետևելու համար
    Բաշխված տարբերակի վերահսկման գործիքը օգտագործվում է կոդերի կառավարման համար
    Այն թույլ է տալիս մի քանի մշակողների աշխատել միասին
    Այն աջակցում է ոչ գծային զարգացմանը իր հազարավոր զուգահեռ ճյուղերի միջոցով

1.2 Հետևում է պատմությանը
    Ազատ և բաց կոդով
    Աջակցում է ոչ գծային զարգացմանը
    Ստեղծում է կրկնօրինակներ
    Ընդարձակելի
    Աջակցում է համագործակցությանը
    Ճյուղավորումն ավելի հեշտ է
    Բաշխված զարգացում

1.3 Աշխատանքային գրացուցակ - Փոփոխեք ֆայլերը ձեր աշխատանքային գրացուցակում
    Բեմականացման տարածք - Բեմադրեք ֆայլերը և ավելացրեք դրանց նկարները ձեր բեմադրության տարածքում
    Git գրացուցակ (պահեստ) - Կատարեք մի հանձնում, որը մշտապես պահում է լուսանկարները ձեր Git գրացուցակում:
  Ստուգեք առկա ցանկացած տարբերակ, կատարեք փոփոխություններ, բեմադրեք դրանք և կատարեք:

1.4 Branch-ը Git-ում օգտագործվում է ձեր փոփոխությունները պահելու համար, մինչև դրանք պատրաստ լինեն:
 Դուք կարող եք կատարել ձեր աշխատանքը ճյուղի վրա, մինչդեռ հիմնական ճյուղը (վարպետը) մնում է կայուն:
 Աշխատանքն ավարտելուց հետո կարող եք այն միավորել գլխավոր գրասենյակի հետ:

1.5 Ստեղծեք պահեստներ
    git init
    Փոփոխություններ կատարել
    add
    commit
    status
    Զուգահեռ զարգացում
    branch
    merge
    rebase
    Համաժամեցրեք պահեստները
    push
    pull
    add origin
